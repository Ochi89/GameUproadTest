
//=============================================================================
//	@file	Font.h
//	@brief	フォント
//	@autor	Takuya Ochi
//	@date	2018/12/30
//=============================================================================

//-----------------------------------------------------------------------------
//	@brief	プリプロセッサ
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//	@brief	インクルード
//-----------------------------------------------------------------------------
#include "DxLib.h"
#include "Common.h"

//-----------------------------------------------------------------------------
//	@brief	フォントクラス
//-----------------------------------------------------------------------------
class Font final
{
public:

//===================== 関数 ======================//

	//	デストラクタ
	~Font();

	//	インスタンスの作成
	static void CreateInstance();

	//	インスタンスの削除
	static void DeleteInstance();

	//	インスタンスの取得
	static Font* GetInstance();

	//	作成処理
	void Create();

	//	描画処理
	void Draw(int x, int y, char* string);

private:

//================== シングルトン ==================//

	//	コンストラクタ
	Font();

//================== 内部処理関数 ==================//

	//	画像のセット
	void _SetGraph(int xNum, int yNum, const char* fileName);

	//	文字の割り当て
	void _ReMap(const char* reMap);

//=================== メンバ変数 ===================//

	static Font*	s_instance;									// インスタンス
	int				m_widht;									// １文字分の横の大きさ
	int				m_height;									// １文字分の縦の大きさ
	int				m_textImg[CommonConstant::FONT_NUM];		// １文字分の画像ハンドル
	int				m_textMap[CommonConstant::FONT_NUM];		// 画像ハンドルへの添え字
};

#define FONT Font::GetInstance()