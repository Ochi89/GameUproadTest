
//=============================================================================
//	@file	LoadScene.h
//	@brief	ローディング
//	@autor	Takuya Ochi
//	@date	2018/12/30
//=============================================================================

//-----------------------------------------------------------------------------
//	@brief	インクルード
//-----------------------------------------------------------------------------
#include "LoadScene.h"

//-----------------------------------------------------------------------------
//	@brief	静的メンバ変数の実態の作成
//-----------------------------------------------------------------------------
Loading	*Loading::s_instance = nullptr;

//-----------------------------------------------------------------------------
//	@brief	コンストラクタ
//-----------------------------------------------------------------------------
Loading::Loading()
{
	m_spriteHendle = LoadGraph("Data/Sprite/Loading/NowLoading.png");
	CommonDebug::Assert((m_spriteHendle <= -1), " [ Loading.cpp ] : error : sprite loading failed.");
}

//-----------------------------------------------------------------------------
//	@brief	デストラクタ
//-----------------------------------------------------------------------------
Loading::~Loading()
{
	//	スプライトのアンロード
	DeleteGraph(m_spriteHendle);
}

//-----------------------------------------------------------------------------
//	@brief	インスタンス生成
//-----------------------------------------------------------------------------
void Loading::CreateInstance()
{
	//	すでに存在している
	if (s_instance) { CommonDebug::Log(" [ Loading.cpp ] : error : Instance has been created."); return; }

	//	nullptrのとき
	if (!s_instance) { Loading::s_instance = new Loading(); }

	//	作成失敗
	if (!s_instance) { CommonDebug::Log(" [ Loading.cpp ] : error : Failed to create instance."); return; }
}

//-----------------------------------------------------------------------------
//	@brief	インスタンス削除
//-----------------------------------------------------------------------------
void Loading::DeleteInstance()
{
	CommonSafe::Delete(s_instance);
}

//-----------------------------------------------------------------------------
//	@brief	インスタンス生成
//-----------------------------------------------------------------------------
Loading* Loading::GetInstance()
{
	return s_instance;
}

//-----------------------------------------------------------------------------
//	@brief	描画
//-----------------------------------------------------------------------------
void Loading::Draw()
{
	DrawGraph(0, 0, m_spriteHendle, TRUE);

	//	画面の更新
	ScreenFlip();
}
