
//=============================================================================
//	@file	Key.h
//	@brief	キー入力
//	@autor	Takuya Ochi
//	@date	2019/9/25
//=============================================================================

//-----------------------------------------------------------------------------
//	@brief	プリプロセッサ
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//	@brief	インクルード
//-----------------------------------------------------------------------------
#include "DxLib.h"
#include "Common.h"

//-----------------------------------------------------------------------------
//	@brief	キー入力クラス
//-----------------------------------------------------------------------------
class Key final
{
public:

//===================== 関数 ======================//

	//	デストラクタ
	~Key();
	
	//	インスタンスの生成
	Key* GetInstance();

	//	すべて使用中にする
	//	シーン切り替え時のときのみ呼ぶ
	void AllInUse();

	//	押した瞬間
	bool Push(const int _keyCode);

	//	押している間
	bool Press(const int _keyCode);

private:

//==================== 列挙体 =====================//

	//	キーの状態
	enum KEY_STATE
	{
		KEY_OFF,		//	オフ
		KEY_ON,			//	オン
	};

//================== シングルトン ==================//

	//	コンストラクタ
	Key();

//=================== メンバ変数 ===================//

	static Key	s_instance;											//	インスタンス
	char		m_key[CommonConstant::MAX_KEY_INPUT_NUM];			//	現在のキー入力
	int			m_prevKey[CommonConstant::MAX_KEY_INPUT_NUM];		//	前のキー入力
};

//===================== マクロ =====================//

#define KEY Key::GetInstance()		//	キーのインスタンス
