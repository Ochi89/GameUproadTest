
//=============================================================================
//	@file	Warning.h
//	@brief	警告処理
//	@autor	Takuya Ochi
//	@date	2018/1/6
//=============================================================================

//-----------------------------------------------------------------------------
//	@brief	プリプロセッサ
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//	@brief	インクルード
//-----------------------------------------------------------------------------
#include "DxLib.h"
#include "Common.h"

//-----------------------------------------------------------------------------
//	@brief	警告クラス
//-----------------------------------------------------------------------------
class Warning final
{
public:

//===================== 関数 ======================//

	//	コンストラクタ / デストラクタ
	Warning();
	~Warning();

	//	更新処理
	void Update();

	//	描画処理
	void Draw();

//==================== setter =====================//

	//	警告の開始の setter
	void SetIsWarningStart(const bool _set) { m_isWarningStart = _set; }

private:

//================== 内部処理関数 ==================//

	//	アルファ値
	void _Alpha();

	//	最終的な解放処理
	void _FinalRelease();

//=================== メンバ変数 ===================//

	int			m_spriteHandle;		//	スプライトハンドル
	VECTOR		m_pos;				//	位置
	int			m_alpha;			//	アルファ値
	float		m_warningTime;		//	警告時間
	bool		m_isWarningStart;	//	警告の開始
	bool		m_isSubAlpha;		//	アルファ減算

//===================== 静的定数 ===================//

	static const int ALPHA_SPEED;			//	アルファ速度
	static const int MAX_ALPHA;				//	アルファ値の最大
	static const int MIN_ALPHA;				//	アルファ値の最小
	static const float MAX_WARNING_TIME;	//	警告時間の最大

};